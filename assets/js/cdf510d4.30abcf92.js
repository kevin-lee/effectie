"use strict";(globalThis.webpackChunkwebsite=globalThis.webpackChunkwebsite||[]).push([[4830],{6865:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>f,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"docs/scalaz-effect/console-effect","title":"ConsoleEffect","description":"ConsoleEffect","source":"@site/versioned_docs/version-v1/docs/scalaz-effect/console-effect.md","sourceDirName":"docs/scalaz-effect","slug":"/docs/scalaz-effect/console-effect","permalink":"/docs/v1/docs/scalaz-effect/console-effect","draft":false,"unlisted":false,"tags":[],"version":"v1","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"layout":"docs","title":"ConsoleEffect"},"sidebar":"sidebar","previous":{"title":"EitherTSupport","permalink":"/docs/v1/docs/scalaz-effect/eithert-support"}}');var c=o(4848),s=o(8453);const l={sidebar_position:5,layout:"docs",title:"ConsoleEffect"},i=void 0,f={},a=[{value:"ConsoleEffect",id:"consoleeffect",level:2},{value:"ConsoleEffectful",id:"consoleeffectful",level:2}];function r(e){const n={code:"code",h2:"h2",pre:"pre",...(0,s.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h2,{id:"consoleeffect",children:"ConsoleEffect"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-scala",children:'import scalaz._\nimport Scalaz._\n\nimport effectie.scalaz._\nimport effectie.YesNo\n\ntrait Something[F[_]] {\n  def foo[A](): F[Unit]\n}\n\nobject Something {\n\n  def apply[F[_]: Something]: Something[F] =\n    implicitly[Something[F]]\n\n  implicit def something[F[_]: ConsoleEffect: Monad]: Something[F] =\n    new SomethingF[F]\n\n  final class SomethingF[F[_]: ConsoleEffect: Monad]\n    extends Something[F] {\n    \n    def foo[A](): F[Unit] = for {\n      _ <- ConsoleEffect[F].putStrLn("Hello")\n      answer <- ConsoleEffect[F].readYesNo("Would you like to proceed?")\n      result = answer match {\n            case YesNo.Yes =>\n              "Done"\n            case YesNo.No =>\n              "Cancelled"\n          }\n      _ <- ConsoleEffect[F].putStrLn(result)\n    } yield ()\n  }\n}\n\nimport scalaz.effect._\n\nval foo = Something[IO].foo()\nfoo.unsafePerformIO()\n'})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"Hello\nWould you like to proceed?\nn\nCancelled\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"Hello\nWould you like to proceed?\ny\nDone\n"})}),"\n",(0,c.jsx)(n.h2,{id:"consoleeffectful",children:"ConsoleEffectful"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-scala",children:'import scalaz._\nimport Scalaz._\n\nimport effectie.scalaz.ConsoleEffectful._\nimport effectie.scalaz._\nimport effectie.YesNo\n\ntrait Something[F[_]] {\n  def foo[A](): F[Unit]\n}\n\nobject Something {\n\n  def apply[F[_]: Something]: Something[F] =\n    implicitly[Something[F]]\n\n  implicit def something[F[_]: ConsoleEffect: Monad]: Something[F] =\n    new SomethingF[F]\n\n  final class SomethingF[F[_]: ConsoleEffect: Monad]\n    extends Something[F] {\n\n    def foo[A](): F[Unit] = for {\n      _ <- putStrLn("Hello")\n      answer <- readYesNo("Would you like to proceed?")\n      result = answer match {\n            case YesNo.Yes =>\n              "Done"\n            case YesNo.No =>\n              "Cancelled"\n          }\n      _ <- putStrLn(result)\n    } yield ()\n  }\n}\n\nimport scalaz.effect._\n\nval foo = Something[IO].foo()\nfoo.unsafePerformIO()\n'})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"Hello\nWould you like to proceed?\nn\nCancelled\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"Hello\nWould you like to proceed?\ny\nDone\n"})})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(r,{...e})}):r(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>l,x:()=>i});var t=o(6540);const c={},s=t.createContext(c);function l(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:l(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);