"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[943],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function f(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),l=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(i.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},s=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=f(e,["components","mdxType","originalType","parentName"]),s=l(t),m=a,d=s["".concat(i,".").concat(m)]||s[m]||p[m]||o;return t?r.createElement(d,c(c({ref:n},u),{},{components:t})):r.createElement(d,c({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,c=new Array(o);c[0]=s;var f={};for(var i in n)hasOwnProperty.call(n,i)&&(f[i]=n[i]);f.originalType=e,f.mdxType="string"==typeof e?e:a,c[1]=f;for(var l=2;l<o;l++)c[l]=t[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}s.displayName="MDXCreateElement"},6505:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return f},contentTitle:function(){return i},metadata:function(){return l},toc:function(){return u},default:function(){return s}});var r=t(3117),a=t(102),o=(t(7294),t(3905)),c=["components"],f={layout:"docs",id:"fx",title:"Fx"},i=void 0,l={unversionedId:"scalaz-effect/fx",id:"scalaz-effect/fx",title:"Fx",description:"Fx",source:"@site/../generated-docs/target/mdoc/scalaz-effect/fx.md",sourceDirName:"scalaz-effect",slug:"/scalaz-effect/fx",permalink:"/docs/scalaz-effect/fx",tags:[],version:"current",frontMatter:{layout:"docs",id:"fx",title:"Fx"},sidebar:"someSidebar",previous:{title:"For Scalaz Effect",permalink:"/docs/scalaz-effect/"},next:{title:"CanCatch",permalink:"/docs/scalaz-effect/can-catch"}},u=[{value:"Fx",id:"fx",children:[],level:2},{value:"Effectful",id:"effectful",children:[],level:2}],p={toc:u};function s(e){var n=e.components,t=(0,a.Z)(e,c);return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"fx"},"Fx"),(0,o.kt)("p",null,"If you use Scalaz Effect and write tagless final code, and look for a generic way to construct ",(0,o.kt)("inlineCode",{parentName:"p"},"F[A]"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Fx")," can help you."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"import effectie.scalaz._\n\ntrait Something[F[_]] {\n  def get[A](a: => A): F[A]\n}\n\nobject Something {\n  def apply[F[_]: Something]: Something[F] =\n    implicitly[Something[F]]\n\n  implicit def something[F[_]: Fx]: Something[F] =\n    new SomethingF[F]\n\n  final class SomethingF[F[_]: Fx]\n    extends Something[F] {\n\n    def get[A](a: => A): F[A] =\n      Fx[F].effectOf(a)\n  }\n}\n\nimport scalaz.effect._\n\nval get1 = Something[IO].get(1)\n// get1: IO[Int] = scalaz.effect.IO$$anon$7@16bf7b4b\n\nget1.unsafePerformIO()\n// res1: Int = 1\n")),(0,o.kt)("p",null,"If you feel it's too cumbersome to repeat ",(0,o.kt)("inlineCode",{parentName:"p"},"Fx[F].effectOf()"),", consider using ",(0,o.kt)("a",{parentName:"p",href:"#effectful"},"Effectful")),(0,o.kt)("h2",{id:"effectful"},"Effectful"),(0,o.kt)("p",null,"If you're sick of repeating ",(0,o.kt)("inlineCode",{parentName:"p"},"Fx[F].effectOf()")," and looking for more convenient ways?, use ",(0,o.kt)("inlineCode",{parentName:"p"},"Effectful")," instead."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"import effectie.scalaz.Effectful._\nimport effectie.scalaz._\n\ntrait Something[F[_]] {\n  def get[A](a: => A): F[A]\n}\n\nobject Something {\n  def apply[F[_]: Something]: Something[F] =\n    implicitly[Something[F]]\n\n  implicit def something[F[_]: Fx]: Something[F] =\n    new SomethingF[F]\n\n  final class SomethingF[F[_]: Fx]\n    extends Something[F] {\n\n    def get[A](a: => A): F[A] =\n      effectOf(a)\n      // No more Fx[F].effectOf(a)\n  }\n}\n\nimport scalaz.effect._\n\nval get1 = Something[IO].get(1)\n// get1: IO[Int] = scalaz.effect.IO$$anon$7@48cf93ca\n\nget1.unsafePerformIO()\n// res3: Int = 1\n")))}s.isMDXComponent=!0}}]);