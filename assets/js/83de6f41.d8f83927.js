"use strict";(globalThis.webpackChunkwebsite=globalThis.webpackChunkwebsite||[]).push([[6320],{1116:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>f,frontMatter:()=>c,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"cats-effect2/console-effect","title":"ConsoleFx","description":"ConsoleFx","source":"@site/../generated-docs/docs/cats-effect2/console-fx.md","sourceDirName":"cats-effect2","slug":"/cats-effect2/console-effect","permalink":"/docs/cats-effect2/console-effect","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"id":"console-effect","title":"ConsoleFx"},"sidebar":"latestSidebar","previous":{"title":"FromFuture","permalink":"/docs/cats-effect2/from-future"},"next":{"title":"For Monix","permalink":"/docs/monix3/"}}');var s=o(4848),i=o(8453);const c={sidebar_position:5,id:"console-effect",title:"ConsoleFx"},l=void 0,r={},a=[{value:"ConsoleFx",id:"consolefx",level:2},{value:"Syntax",id:"syntax",level:2}];function d(e){const n={code:"code",h2:"h2",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"consolefx",children:"ConsoleFx"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-scala",children:'import cats._\nimport cats.syntax.all._\n\nimport effectie.core._\nimport effectie.core.YesNo\n\ntrait Something[F[_]] {\n  def foo[A](): F[Unit]\n}\n\nobject Something {\n\n  def apply[F[_]: Something]: Something[F] =\n    implicitly[Something[F]]\n\n  implicit def something[F[_]: Fx: Monad]: Something[F] =\n    new SomethingF[F]\n\n  final class SomethingF[F[_]: Fx: Monad]\n    extends Something[F] {\n\n    def foo[A](): F[Unit] = for {\n      _ <- ConsoleFx[F].putStrLn("Hello")\n      answer <- ConsoleFx[F].readYesNo("Would you like to proceed?")\n      result = answer match {\n            case YesNo.Yes =>\n              "Done"\n            case YesNo.No =>\n              "Cancelled"\n          }\n      _ <- ConsoleFx[F].putStrLn(result)\n    } yield ()\n  }\n}\n\nimport cats.effect._\nimport effectie.instances.ce2.fx._\n\nval foo = Something[IO].foo()\nfoo.unsafeRunSync()\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Hello\nWould you like to proceed?\nn\nCancelled\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Hello\nWould you like to proceed?\ny\nDone\n"})}),"\n",(0,s.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-scala",metastring:"modc:compile-only",children:'import cats._\nimport cats.syntax.all._\n\nimport effectie.core._\nimport effectie.syntax.all._\nimport effectie.YesNo\n\ntrait Something[F[_]] {\n  def foo[A](): F[Unit]\n}\n\nobject Something {\n\n  def apply[F[_]: Something]: Something[F] =\n    implicitly[Something[F]]\n\n  implicit def something[F[_]: Fx: Monad]: Something[F] =\n    new SomethingF[F]\n\n  final class SomethingF[F[_]: Fx: Monad]\n    extends Something[F] {\n\n    def foo[A](): F[Unit] = for {\n      _ <- putStrLn("Hello")\n      answer <- readYesNo("Would you like to proceed?")\n      result = answer match {\n            case YesNo.Yes =>\n              "Done"\n            case YesNo.No =>\n              "Cancelled"\n          }\n      _ <- putStrLn(result)\n    } yield ()\n  }\n}\n\nimport cats.effect._\nimport effectie.instances.ce2.fx._\n\nval foo = Something[IO].foo()\nfoo.unsafeRunSync()\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Hello\nWould you like to proceed?\nn\nCancelled\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Hello\nWould you like to proceed?\ny\nDone\n"})})]})}function f(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>c,x:()=>l});var t=o(6540);const s={},i=t.createContext(s);function c(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);