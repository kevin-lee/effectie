"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[27],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return g}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var f=r.createContext({}),p=function(e){var t=r.useContext(f),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(f.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,f=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),s=p(n),g=i,m=s["".concat(f,".").concat(g)]||s[g]||l[g]||o;return n?r.createElement(m,a(a({ref:t},u),{},{components:n})):r.createElement(m,a({ref:t},u))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=s;var c={};for(var f in t)hasOwnProperty.call(t,f)&&(c[f]=t[f]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var p=2;p<o;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},612:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return f},metadata:function(){return p},toc:function(){return u},default:function(){return s}});var r=n(3117),i=n(102),o=(n(7294),n(3905)),a=["components"],c={layout:"docs",title:"EitherTSupport"},f=void 0,p={unversionedId:"scalaz-effect/eithert-support",id:"scalaz-effect/eithert-support",title:"EitherTSupport",description:"EitherTSupport",source:"@site/../generated-docs/target/mdoc/scalaz-effect/eithert-support.md",sourceDirName:"scalaz-effect",slug:"/scalaz-effect/eithert-support",permalink:"/docs/scalaz-effect/eithert-support",tags:[],version:"current",frontMatter:{layout:"docs",title:"EitherTSupport"},sidebar:"someSidebar",previous:{title:"OptionTSupport",permalink:"/docs/scalaz-effect/optiont-support"},next:{title:"ConsoleEffect",permalink:"/docs/scalaz-effect/console-effect"}},u=[{value:"EitherTSupport",id:"eithertsupport",children:[],level:2}],l={toc:u};function s(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"eithertsupport"},"EitherTSupport"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'import scalaz._\nimport Scalaz._\n\nimport effectie.scalaz.Effectful._\nimport effectie.scalaz._\nimport effectie.scalaz.EitherTSupport._\n\ntrait Something[F[_]] {\n  def foo(a: Int): F[String \\/ Int]\n  def bar(a: String \\/ Int): F[String \\/ Int]\n}\n\nobject Something {\n  def apply[F[_]: Something]: Something[F] =\n    implicitly[Something[F]]\n\n  implicit def something[F[_]: Fx: Monad]: Something[F] =\n    new SomethingF[F]\n\n  final class SomethingF[F[_]: Fx: Monad]\n    extends Something[F] {\n\n    def foo(a: Int): F[String \\/ Int] = (for {\n      x <- a.rightTF[F, String] // == EitherT(Applicative[F].pure(a).map(_.right[String]))\n      y <- (x + 10).rightTF[F, String] // == EitherT(Applicative[F].pure(x + 10).map(_.right[String]))\n      y2 <- if (y > 100)\n              eitherTLeft[Int]("Error - Bigger than 100")\n            else\n              eitherTRightPure[String](y)\n       // \u2191 if (y > 100)\n       //     EitherT(pureOF("Error - Bigger than 100").map(_.left[Int]))\n       //   else\n       //     EitherT(pureOf(y).map(_.right[String]))\n      z <- effectOf(y2 + 100).rightT[String] // == EitherT(effectOf(y + 100).map(_.right))\n    } yield z).run\n\n    def bar(a: String \\/ Int): F[String \\/ Int] = (for {\n      x <- a.eitherT[F] // == EitherT(pureOf(a: String \\/ Int))\n      y <- effectOf((x + 999).right[String]).eitherT  // == EitherT(effectOf((x + 999).right[String]))\n    } yield y).run\n  }\n\n}\n\nimport scalaz.effect._\n\nSomething[IO].foo(1).unsafePerformIO()\n// res1: String \\/ Int = \\/-(b = 111)\nSomething[IO].foo(10).unsafePerformIO()\n// res2: String \\/ Int = \\/-(b = 120)\n\nSomething[IO].bar(1.right[String]).unsafePerformIO()\n// res3: String \\/ Int = \\/-(b = 1000)\nSomething[IO].bar("No number".left[Int]).unsafePerformIO()\n// res4: String \\/ Int = -\\/(a = "No number")\n')))}s.isMDXComponent=!0}}]);