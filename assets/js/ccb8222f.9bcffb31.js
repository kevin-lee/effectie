"use strict";(globalThis.webpackChunkwebsite=globalThis.webpackChunkwebsite||[]).push([[4903],{5120:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>f,default:()=>d,frontMatter:()=>s,metadata:()=>c,toc:()=>r});const c=JSON.parse('{"id":"docs/cats-effect/fx","title":"Fx","description":"Fx","source":"@site/versioned_docs/version-v1/docs/cats-effect/fx.md","sourceDirName":"docs/cats-effect","slug":"/docs/cats-effect/fx","permalink":"/docs/v1/docs/cats-effect/fx","draft":false,"unlisted":false,"tags":[],"version":"v1","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"id":"fx","title":"Fx"},"sidebar":"sidebar","previous":{"title":"For Cats Effect","permalink":"/docs/v1/docs/cats-effect/"},"next":{"title":"CanCatch","permalink":"/docs/v1/docs/cats-effect/can-catch"}}');var i=t(4848),o=t(8453);const s={sidebar_position:1,id:"fx",title:"Fx"},f=void 0,a={},r=[{value:"Fx",id:"fx",level:2},{value:"Effectful",id:"effectful",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"fx",children:"Fx"}),"\n",(0,i.jsxs)(n.p,{children:["If you use Cats Effect and write tagless final code, and look for a generic way to construct ",(0,i.jsx)(n.code,{children:"F[A]"}),", ",(0,i.jsx)(n.code,{children:"Fx"})," can help you."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scala",children:"import effectie.cats._\n\ntrait Something[F[_]] {\n  def get[A](a: => A): F[A]\n}\n\nobject Something {\n  def apply[F[_]: Something]: Something[F] =\n    implicitly[Something[F]]\n\n  implicit def something[F[_]: Fx]: Something[F] =\n    new SomethingF[F]\n\n  final class SomethingF[F[_]: Fx]\n    extends Something[F] {\n\n    def get[A](a: => A): F[A] =\n      Fx[F].effectOf(a)\n  }\n}\n\nimport cats.effect._\n\nval get1 = Something[IO].get(1)\n// get1: IO[Int] = Delay(thunk = <function0>)\n\nget1.unsafeRunSync()\n// res1: Int = 1\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If you feel it's too cumbersome to repeat ",(0,i.jsx)(n.code,{children:"Fx[F].effectOf()"}),", consider using ",(0,i.jsx)(n.a,{href:"#effectful",children:"Effectful"})]}),"\n",(0,i.jsx)(n.h2,{id:"effectful",children:"Effectful"}),"\n",(0,i.jsxs)(n.p,{children:["If you're sick of repeating ",(0,i.jsx)(n.code,{children:"Fx[F].effectOf()"})," and looking for more convenient ways?, use ",(0,i.jsx)(n.code,{children:"Effectful"})," instead."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scala",children:"import effectie.cats.Effectful._\nimport effectie.cats._\n\ntrait Something[F[_]] {\n  def get[A](a: => A): F[A]\n}\n\nobject Something {\n  def apply[F[_]: Something]: Something[F] =\n    implicitly[Something[F]]\n\n  implicit def something[F[_]: Fx]: Something[F] =\n    new SomethingF[F]\n\n  final class SomethingF[F[_]: Fx]\n    extends Something[F] {\n\n    def get[A](a: => A): F[A] =\n      effectOf(a)\n      // No more Fx[F].effectOf(a)\n  }\n}\n\nimport cats.effect._\n\nval get1 = Something[IO].get(1)\n// get1: IO[Int] = Delay(thunk = <function0>)\n\nget1.unsafeRunSync()\n// res3: Int = 1\n"})})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>f});var c=t(6540);const i={},o=c.createContext(i);function s(e){const n=c.useContext(o);return c.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function f(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),c.createElement(o.Provider,{value:n},e.children)}}}]);