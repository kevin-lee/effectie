"use strict";(globalThis.webpackChunkwebsite=globalThis.webpackChunkwebsite||[]).push([[2793],{6631:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>d,frontMatter:()=>c,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"monix3/fx","title":"Fx","description":"Fx","source":"@site/../generated-docs/docs/monix3/fx.md","sourceDirName":"monix3","slug":"/monix3/fx","permalink":"/docs/monix3/fx","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"id":"fx","title":"Fx"},"sidebar":"latestSidebar","previous":{"title":"For Monix","permalink":"/docs/monix3/"},"next":{"title":"FromFuture","permalink":"/docs/monix3/from-future"}}');var o=t(4848),s=t(8453);const c={sidebar_position:1,id:"fx",title:"Fx"},r=void 0,a={},l=[{value:"Fx",id:"fx",level:2},{value:"Syntax",id:"syntax",level:2}];function f(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"fx",children:"Fx"}),"\n",(0,o.jsxs)(n.p,{children:["If you use Monix and write tagless final code, and look for a generic way to construct ",(0,o.jsx)(n.code,{children:"F[A]"}),", ",(0,o.jsx)(n.code,{children:"Fx"})," can help you."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-scala",children:"import effectie.core._\n\ntrait Something[F[_]] {\n  def get[A](a: => A): F[A]\n}\n\nobject Something {\n  def apply[F[_]: Something]: Something[F] =\n    implicitly[Something[F]]\n\n  implicit def something[F[_]: Fx]: Something[F] =\n    new SomethingF[F]\n\n  final class SomethingF[F[_]: Fx]\n    extends Something[F] {\n\n    def get[A](a: => A): F[A] =\n      Fx[F].effectOf(a)\n  }\n}\n\nimport monix.eval._\nimport monix.execution.Scheduler.Implicits.global\n\nimport effectie.instances.monix3.fx._\n\nval get1 = Something[Task].get(1)\n// get1: Task[Int] = Eval(thunk = <function0>)\n\nget1.runSyncUnsafe()\n// res1: Int = 1\n"})}),"\n",(0,o.jsxs)(n.p,{children:["If you feel it's too cumbersome to repeat ",(0,o.jsx)(n.code,{children:"Fx[F].effectOf()"}),", consider using ",(0,o.jsx)(n.code,{children:"effectie.syntax"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,o.jsxs)(n.p,{children:["If you're sick of repeating ",(0,o.jsx)(n.code,{children:"Fx[F].effectOf()"})," and looking for more convenient ways?, use ",(0,o.jsx)(n.code,{children:"Effectful"})," instead."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-scala",children:"import effectie.syntax.all._\nimport effectie.core._\n\ntrait Something[F[_]] {\n  def get[A](a: => A): F[A]\n}\n\nobject Something {\n  def apply[F[_]: Something]: Something[F] =\n    implicitly[Something[F]]\n\n  implicit def something[F[_]: Fx]: Something[F] =\n    new SomethingF[F]\n\n  final class SomethingF[F[_]: Fx]\n    extends Something[F] {\n\n    def get[A](a: => A): F[A] =\n      effectOf(a)\n      // No more Fx[F].effectOf(a)\n  }\n}\n\nimport monix.eval._\nimport monix.execution.Scheduler.Implicits.global\n\nimport effectie.instances.monix3.fx._\n\nval get1 = Something[Task].get(1)\n// get1: Task[Int] = Eval(thunk = <function0>)\n\nget1.runSyncUnsafe()\n// res3: Int = 1\n"})})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(f,{...e})}):f(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>r});var i=t(6540);const o={},s=i.createContext(o);function c(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);