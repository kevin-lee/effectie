(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[886],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var f=r.createContext({}),l=function(e){var t=r.useContext(f),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(f.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,c=e.originalType,f=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=l(n),m=o,d=p["".concat(f,".").concat(m)]||p[m]||s[m]||c;return n?r.createElement(d,a(a({ref:t},u),{},{components:n})):r.createElement(d,a({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=n.length,a=new Array(c);a[0]=p;var i={};for(var f in t)hasOwnProperty.call(t,f)&&(i[f]=t[f]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var l=2;l<c;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},4839:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return f},metadata:function(){return l},toc:function(){return u},default:function(){return p}});var r=n(2122),o=n(9756),c=(n(7294),n(3905)),a=["components"],i={id:"fx",title:"Fx"},f=void 0,l={unversionedId:"cats-effect/fx",id:"cats-effect/fx",isDocsHomePage:!1,title:"Fx",description:"Fx",source:"@site/../generated-docs/target/mdoc/cats-effect/fx.md",sourceDirName:"cats-effect",slug:"/cats-effect/fx",permalink:"/docs/cats-effect/fx",version:"current",frontMatter:{id:"fx",title:"Fx"},sidebar:"someSidebar",previous:{title:"For Cats Effect",permalink:"/docs/cats-effect/cats-effect"},next:{title:"CanCatch",permalink:"/docs/cats-effect/can-catch"}},u=[{value:"Fx",id:"fx",children:[]},{value:"Effectful",id:"effectful",children:[]}],s={toc:u};function p(e){var t=e.components,n=(0,o.Z)(e,a);return(0,c.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h2",{id:"fx"},"Fx"),(0,c.kt)("p",null,"If you use Cats Effect and write tagless final code, and look for a generic way to construct ",(0,c.kt)("inlineCode",{parentName:"p"},"F[A]"),", ",(0,c.kt)("inlineCode",{parentName:"p"},"Fx")," can help you."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-scala"},"import effectie.cats._\n\ntrait Something[F[_]] {\n  def get[A](a: => A): F[A]\n}\n\nobject Something {\n  def apply[F[_]: Something]: Something[F] =\n    implicitly[Something[F]]\n\n  implicit def something[F[_]: Fx]: Something[F] =\n    new SomethingF[F]\n\n  final class SomethingF[F[_]: Fx]\n    extends Something[F] {\n\n    def get[A](a: => A): F[A] =\n      Fx[F].effectOf(a)\n  }\n}\n\nimport cats.effect._\n\nval get1 = Something[IO].get(1)\n// get1: IO[Int] = Delay(thunk = <function0>)\n\nget1.unsafeRunSync()\n// res1: Int = 1\n")),(0,c.kt)("p",null,"If you feel it's too cumbersome to repeat ",(0,c.kt)("inlineCode",{parentName:"p"},"Fx[F].effectOf()"),", consider using ",(0,c.kt)("a",{parentName:"p",href:"#effectful"},"Effectful")),(0,c.kt)("h2",{id:"effectful"},"Effectful"),(0,c.kt)("p",null,"If you're sick of repeating ",(0,c.kt)("inlineCode",{parentName:"p"},"Fx[F].effectOf()")," and looking for more convenient ways?, use ",(0,c.kt)("inlineCode",{parentName:"p"},"Effectful")," instead."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-scala"},"import effectie.cats.Effectful._\nimport effectie.cats._\n\ntrait Something[F[_]] {\n  def get[A](a: => A): F[A]\n}\n\nobject Something {\n  def apply[F[_]: Something]: Something[F] =\n    implicitly[Something[F]]\n\n  implicit def something[F[_]: Fx]: Something[F] =\n    new SomethingF[F]\n\n  final class SomethingF[F[_]: Fx]\n    extends Something[F] {\n\n    def get[A](a: => A): F[A] =\n      effectOf(a)\n      // No more Fx[F].effectOf(a)\n  }\n}\n\nimport cats.effect._\n\nval get1 = Something[IO].get(1)\n// get1: IO[Int] = Delay(thunk = <function0>)\n\nget1.unsafeRunSync()\n// res3: Int = 1\n")))}p.isMDXComponent=!0}}]);