(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[683],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return m},kt:function(){return s}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):u(u({},t),e)),n},m=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,m=a(e,["components","mdxType","originalType","parentName"]),f=l(n),s=o,d=f["".concat(c,".").concat(s)]||f[s]||p[s]||i;return n?r.createElement(d,u(u({ref:t},m),{},{components:n})):r.createElement(d,u({ref:t},m))}));function s(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,u=new Array(i);u[0]=f;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:o,u[1]=a;for(var l=2;l<i;l++)u[l]=n[l];return r.createElement.apply(null,u)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},7249:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return a},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return m},default:function(){return f}});var r=n(2122),o=n(9756),i=(n(7294),n(3905)),u=["components"],a={id:"from-future",title:"FromFuture"},c=void 0,l={unversionedId:"monix/from-future",id:"monix/from-future",isDocsHomePage:!1,title:"FromFuture",description:"FromFuture",source:"@site/../generated-docs/target/mdoc/monix/from-future.md",sourceDirName:"monix",slug:"/monix/from-future",permalink:"/docs/monix/from-future",version:"current",frontMatter:{id:"from-future",title:"FromFuture"},sidebar:"someSidebar",previous:{title:"CanHandleError",permalink:"/docs/monix/can-handle-error"},next:{title:"OptionTSupport",permalink:"/docs/monix/optiont-support"}},m=[{value:"FromFuture",id:"fromfuture",children:[]},{value:"FromFuture.toEffect",id:"fromfuturetoeffect",children:[]}],p={toc:m};function f(e){var t=e.components,n=(0,o.Z)(e,u);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"fromfuture"},"FromFuture"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"FromFuture")," is a typeclass to convert ",(0,i.kt)("inlineCode",{parentName:"p"},"scala.concurrent.Future")," to an effect, ",(0,i.kt)("inlineCode",{parentName:"p"},"F[_]"),". So if there are some APIs returning ",(0,i.kt)("inlineCode",{parentName:"p"},"Future"),", it can be converted to ",(0,i.kt)("inlineCode",{parentName:"p"},"F[_]"),"."),(0,i.kt)("p",null,"There are three ",(0,i.kt)("inlineCode",{parentName:"p"},"FromFuture")," instances available."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"FromFuture")," for ",(0,i.kt)("inlineCode",{parentName:"li"},"monix.eval.Task")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"FromFuture")," for ",(0,i.kt)("inlineCode",{parentName:"li"},"scala.concurrent.Future")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"FromFuture")," for ",(0,i.kt)("inlineCode",{parentName:"li"},"cats.Id"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},"trait FromFuture[F[_]] {\n  def toEffect[A](future: => Future[A]): F[A]\n}\n")),(0,i.kt)("h2",{id:"fromfuturetoeffect"},"FromFuture.toEffect"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},"import cats._\nimport cats.syntax.all._\nimport monix.eval._\n\nimport effectie.monix._\nimport effectie.monix.Effectful._\n\nimport effectie.concurrent.ExecutorServiceOps\n\nimport java.util.concurrent.{ExecutorService, Executors}\nimport scala.concurrent.{ExecutionContext, Future}\nimport scala.concurrent.duration._\n\nobject MyApp {\n\n  def foo(n: Int)(implicit ec: ExecutionContext): Future[Int] =\n    Future(n + 100)\n\n  def bar[F[_]: Fx](n: Int): F[Int] =\n    pureOf(n * 2)\n\n  def baz[F[_]: Monad: Fx: FromFuture](n: Int)(implicit ec: ExecutionContext): F[Int] =\n    for {\n      a <- FromFuture[F].toEffect(foo(n))\n      b <- bar[F](a)\n    } yield b\n\n}\n\nval executorService: ExecutorService =\n  Executors.newWorkStealingPool(Runtime.getRuntime.availableProcessors() >> 1)\n// executorService: ExecutorService = java.util.concurrent.ForkJoinPool@1203bb86[Terminated, parallelism = 1, size = 0, active = 0, running = 0, steals = 0, tasks = 0, submissions = 0]\nimplicit val ec: ExecutionContext = ExecutionContext.fromExecutorService(executorService)\n// ec: ExecutionContext = scala.concurrent.impl.ExecutionContextImpl$$anon$4@169a3d7\n\nimport monix.execution.Scheduler.Implicits.global\ntry {\n  println(MyApp.baz[Task](1).runSyncUnsafe())\n} finally {\n  ExecutorServiceOps.shutdownAndAwaitTermination(executorService, 1.second)\n}\n// 202\n")))}f.isMDXComponent=!0}}]);