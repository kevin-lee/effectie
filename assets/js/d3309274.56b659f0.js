(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[27],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return u},kt:function(){return g}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var f=n.createContext({}),p=function(e){var t=n.useContext(f),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(f.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,f=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),s=p(r),g=i,m=s["".concat(f,".").concat(g)]||s[g]||l[g]||o;return r?n.createElement(m,a(a({ref:t},u),{},{components:r})):n.createElement(m,a({ref:t},u))}));function g(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=s;var c={};for(var f in t)hasOwnProperty.call(t,f)&&(c[f]=t[f]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var p=2;p<o;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}s.displayName="MDXCreateElement"},5574:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return c},metadata:function(){return f},toc:function(){return p},default:function(){return l}});var n=r(2122),i=r(9756),o=(r(7294),r(3905)),a=["components"],c={layout:"docs",title:"EitherTSupport"},f={unversionedId:"scalaz-effect/eithert-support",id:"scalaz-effect/eithert-support",isDocsHomePage:!1,title:"EitherTSupport",description:"EitherTSupport",source:"@site/../generated-docs/target/mdoc/scalaz-effect/eithert-support.md",sourceDirName:"scalaz-effect",slug:"/scalaz-effect/eithert-support",permalink:"/docs/scalaz-effect/eithert-support",version:"current",frontMatter:{layout:"docs",title:"EitherTSupport"},sidebar:"someSidebar",previous:{title:"OptionTSupport",permalink:"/docs/scalaz-effect/optiont-support"},next:{title:"ConsoleEffect",permalink:"/docs/scalaz-effect/console-effect"}},p=[{value:"EitherTSupport",id:"eithertsupport",children:[]}],u={toc:p};function l(e){var t=e.components,r=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"eithertsupport"},"EitherTSupport"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'import scalaz._\nimport Scalaz._\n\nimport effectie.scalaz.Effectful._\nimport effectie.scalaz._\nimport effectie.scalaz.EitherTSupport._\n\ntrait Something[F[_]] {\n  def foo(a: Int): F[String \\/ Int]\n  def bar(a: String \\/ Int): F[String \\/ Int]\n}\n\nobject Something {\n  def apply[F[_]: Something]: Something[F] =\n    implicitly[Something[F]]\n\n  implicit def something[F[_]: Fx: Monad]: Something[F] =\n    new SomethingF[F]\n\n  final class SomethingF[F[_]: Fx: Monad]\n    extends Something[F] {\n\n    def foo(a: Int): F[String \\/ Int] = (for {\n      x <- a.rightTF[F, String] // == EitherT(Applicative[F].pure(a).map(_.right[String]))\n      y <- (x + 10).rightTF[F, String] // == EitherT(Applicative[F].pure(x + 10).map(_.right[String]))\n      y2 <- if (y > 100)\n              eitherTLeft[Int]("Error - Bigger than 100")\n            else\n              eitherTRightPure[String](y)\n       // \u2191 if (y > 100)\n       //     EitherT(pureOF("Error - Bigger than 100").map(_.left[Int]))\n       //   else\n       //     EitherT(pureOf(y).map(_.right[String]))\n      z <- effectOf(y2 + 100).rightT[String] // == EitherT(effectOf(y + 100).map(_.right))\n    } yield z).run\n\n    def bar(a: String \\/ Int): F[String \\/ Int] = (for {\n      x <- a.eitherT[F] // == EitherT(pureOf(a: String \\/ Int))\n      y <- effectOf((x + 999).right[String]).eitherT  // == EitherT(effectOf((x + 999).right[String]))\n    } yield y).run\n  }\n\n}\n\nimport scalaz.effect._\n\nSomething[IO].foo(1).unsafePerformIO()\n// res1: String \\/ Int = \\/-(b = 111)\nSomething[IO].foo(10).unsafePerformIO()\n// res2: String \\/ Int = \\/-(b = 120)\n\nSomething[IO].bar(1.right[String]).unsafePerformIO()\n// res3: String \\/ Int = \\/-(b = 1000)\nSomething[IO].bar("No number".left[Int]).unsafePerformIO()\n// res4: String \\/ Int = -\\/(a = "No number")\n')))}l.isMDXComponent=!0}}]);