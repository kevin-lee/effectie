"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[41],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>b});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var f=r.createContext({}),c=function(e){var n=r.useContext(f),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(f.Provider,{value:n},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,f=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=c(t),u=i,b=s["".concat(f,".").concat(u)]||s[u]||m[u]||o;return t?r.createElement(b,a(a({ref:n},p),{},{components:t})):r.createElement(b,a({ref:n},p))}));function b(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=u;var l={};for(var f in n)hasOwnProperty.call(n,f)&&(l[f]=n[f]);l.originalType=e,l[s]="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},112:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>f,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=t(7462),i=(t(7294),t(3905));const o={id:"monix",title:"For Monix"},a=void 0,l={unversionedId:"monix3/monix",id:"monix3/monix",title:"For Monix",description:"Effectie for Monix",source:"@site/../generated-docs/docs/monix3/monix3.md",sourceDirName:"monix3",slug:"/monix3/",permalink:"/docs/monix3/",draft:!1,tags:[],version:"current",frontMatter:{id:"monix",title:"For Monix"},sidebar:"latestSidebar",previous:{title:"ConsoleEffect",permalink:"/docs/cats-effect2/console-effect"},next:{title:"Fx",permalink:"/docs/monix3/fx"}},f={},c=[{value:"Effectie for Monix",id:"effectie-for-monix",level:2},{value:"All in One Example",id:"all-in-one-example",level:2}],p={toc:c},s="wrapper";function m(e){let{components:n,...t}=e;return(0,i.kt)(s,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"effectie-for-monix"},"Effectie for Monix"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/monix3/fx"},"Fx")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/monix3/from-future"},"FromFuture"))),(0,i.kt)("h2",{id:"all-in-one-example"},"All in One Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},'import cats._\nimport cats.syntax.all._\nimport monix.eval._\n\nimport effectie.syntax.all._\n\nimport extras.cats.syntax.all._\nimport effectie.core._\n\ntrait Something[F[_]] {\n  def foo[A: Semigroup](a: A): F[A]\n  def bar[A: Semigroup](a: Option[A]): F[Option[A]]\n  def baz[A, B: Semigroup](a: Either[A, B]): F[Either[A, B]]\n}\n\nobject Something {\n\n  def apply[F[_]: Something]: Something[F] =\n    implicitly[Something[F]]\n\n  implicit def something[F[_]: Fx: ConsoleEffect: Monad]: Something[F] =\n    new SomethingF[F]\n\n  final class SomethingF[F[_]: Fx: ConsoleEffect: Monad]\n    extends Something[F] {\n\n    override def foo[A: Semigroup](a: A): F[A] =\n      for {\n        n    <- effectOf(a)\n        blah <- pureOf("blah blah")\n        _    <- effectOf(println(s"n: $n / BLAH: $blah"))\n        x    <- effectOf(n |+| n)\n        _    <- putStrLn(s"x: $x")\n      } yield x\n\n    override def bar[A: Semigroup](a: Option[A]): F[Option[A]] =\n      (for {\n        aa   <- a.optionT[F] // OptionT(Applicative[F].pure(a))\n        blah <- "blah blah".someTF[F] // OptionT(Applicative[F].pure(Some("blah blah")))\n        _    <- effectOf(\n                  println(s"a: $a / BLAH: $blah")\n                ).someT // OptionT(effectOf(Some(println(s"a: $a / BLAH: $blah"))))\n        x    <- effectOf(a |+| a).optionT // OptionT(effectOf(a |+| a))\n        _    <- effectOf(putStrLn(s"x: $x")).someT // OptionT(effectOf(Some(putStrLn(s"x: $x"))))\n      } yield x).value\n\n    override def baz[A, B: Semigroup](ab: Either[A, B]): F[Either[A, B]] =\n      (for {\n        b    <- ab.eitherT[F] // EitherT(Applicative[F].pure(ab))\n        blah <- "blah blah"\n                  .asRight[A]\n                  .eitherT[F] // EitherT(Applicative[F].pure("blah blah".asRight[A]))\n        _    <- effectOf(\n                  println(s"b: $b / BLAH: $blah")\n                ).rightT[A] // EitherT(effectOf(Right(println(s"b: $b / BLAH: $blah"))))\n        x    <- effectOf(ab |+| ab).eitherT // EitherT(effectOf(ab |+| ab))\n        _    <- effectOf(\n                  putStrLn(s"x: $x")\n                ).rightT[A] // EitherT(effectOf(putStrLn(s"x: $x").asRight[A]))\n      } yield x).value\n  }\n}\nimport monix.execution.Scheduler.Implicits.global\n\nimport effectie.instances.monix3.fx._\nimport effectie.instances.console._\n\nprintln(Something[Task].foo(1).runSyncUnsafe())\n// n: 1 / BLAH: blah blah\n// x: 2\n// 2\n\nprintln(Something[Task].bar(2.some).runSyncUnsafe())\n// a: Some(2) / BLAH: blah blah\n// Some(4)\nprintln(Something[Task].bar(none[String]).runSyncUnsafe())\n// None\n\nprintln(Something[Task].baz(2.asRight[String]).runSyncUnsafe())\n// b: 2 / BLAH: blah blah\n// Right(4)\nprintln(Something[Task].baz("ERROR!!!".asLeft[Int]).runSyncUnsafe())\n// Left(ERROR!!!)\n')))}m.isMDXComponent=!0}}]);