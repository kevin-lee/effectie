"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[698],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>d});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function f(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},c=Object.keys(e);for(o=0;o<c.length;o++)t=c[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(o=0;o<c.length;o++)t=c[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=o.createContext({}),a=function(e){var n=o.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=a(e.components);return o.createElement(i.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,c=e.originalType,i=e.parentName,s=f(e,["components","mdxType","originalType","parentName"]),p=a(t),m=r,d=p["".concat(i,".").concat(m)]||p[m]||u[m]||c;return t?o.createElement(d,l(l({ref:n},s),{},{components:t})):o.createElement(d,l({ref:n},s))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var c=t.length,l=new Array(c);l[0]=m;var f={};for(var i in n)hasOwnProperty.call(n,i)&&(f[i]=n[i]);f.originalType=e,f[p]="string"==typeof e?e:r,l[1]=f;for(var a=2;a<c;a++)l[a]=t[a];return o.createElement.apply(null,l)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},98:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>p,frontMatter:()=>c,metadata:()=>f,toc:()=>a});var o=t(7462),r=(t(7294),t(3905));const c={sidebar_position:5,id:"console-effect",title:"ConsoleEffect"},l=void 0,f={unversionedId:"cats-effect2/console-effect",id:"cats-effect2/console-effect",title:"ConsoleEffect",description:"ConsoleEffect",source:"@site/../generated-docs/docs/cats-effect2/console-effect.md",sourceDirName:"cats-effect2",slug:"/cats-effect2/console-effect",permalink:"/docs/cats-effect2/console-effect",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,id:"console-effect",title:"ConsoleEffect"},sidebar:"latestSidebar",previous:{title:"FromFuture",permalink:"/docs/cats-effect2/from-future"},next:{title:"For Monix",permalink:"/docs/monix3/"}},i={},a=[{value:"ConsoleEffect",id:"consoleeffect",level:2},{value:"ConsoleEffectful",id:"consoleeffectful",level:2}],s={toc:a};function p(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,o.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"consoleeffect"},"ConsoleEffect"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import cats._\nimport cats.syntax.all._\n\nimport effectie.core._\nimport effectie.core.YesNo\n\ntrait Something[F[_]] {\n  def foo[A](): F[Unit]\n}\n\nobject Something {\n\n  def apply[F[_]: Something]: Something[F] =\n    implicitly[Something[F]]\n\n  implicit def something[F[_]: ConsoleEffect: Monad]: Something[F] =\n    new SomethingF[F]\n\n  final class SomethingF[F[_]: ConsoleEffect: Monad]\n    extends Something[F] {\n\n    def foo[A](): F[Unit] = for {\n      _ <- ConsoleEffect[F].putStrLn("Hello")\n      answer <- ConsoleEffect[F].readYesNo("Would you like to proceed?")\n      result = answer match {\n            case YesNo.Yes =>\n              "Done"\n            case YesNo.No =>\n              "Cancelled"\n          }\n      _ <- ConsoleEffect[F].putStrLn(result)\n    } yield ()\n  }\n}\n\nimport cats.effect._\nimport effectie.instances.ce2.fx._\nimport effectie.instances.console._\n\nval foo = Something[IO].foo()\nfoo.unsafeRunSync()\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Hello\nWould you like to proceed?\nn\nCancelled\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Hello\nWould you like to proceed?\ny\nDone\n")),(0,r.kt)("h2",{id:"consoleeffectful"},"ConsoleEffectful"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import cats._\nimport cats.syntax.all._\n\nimport effectie.cats.ConsoleEffectful._\nimport effectie.core._\nimport effectie.YesNo\n\ntrait Something[F[_]] {\n  def foo[A](): F[Unit]\n}\n\nobject Something {\n\n  def apply[F[_]: Something]: Something[F] =\n    implicitly[Something[F]]\n\n  implicit def something[F[_]: ConsoleEffect: Monad]: Something[F] =\n    new SomethingF[F]\n\n  final class SomethingF[F[_]: ConsoleEffect: Monad]\n    extends Something[F] {\n\n    def foo[A](): F[Unit] = for {\n      _ <- putStrLn("Hello")\n      answer <- readYesNo("Would you like to proceed?")\n      result = answer match {\n            case YesNo.Yes =>\n              "Done"\n            case YesNo.No =>\n              "Cancelled"\n          }\n      _ <- putStrLn(result)\n    } yield ()\n  }\n}\n\nimport cats.effect._\n\nval foo = Something[IO].foo()\nfoo.unsafeRunSync()\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Hello\nWould you like to proceed?\nn\nCancelled\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Hello\nWould you like to proceed?\ny\nDone\n")))}p.isMDXComponent=!0}}]);